<?php
namespace App\Http\Controllers\Customer;

use App\Models\Busi\Customer;
use App\Models\Busi\Material;
use App\Models\Busi\StockOutItem;
use App\Models\Busi\Store;
use Illuminate\Http\Request;
use App\Http\Controllers\Admin\AdminController;
use App\Models\Busi\StockOut;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\DB;

class StockOutController extends BaseController
{
	public function newEntity(array $attributes = [])
	{
		// TODO: Implement newEntity() method.
		return new StockOut($attributes);
	}

	/**
	* Display a listing of the resource.
	*
	* @return  \Illuminate\Http\Response
	*/
	public function index()
	{
		$customer = Auth::user()->reference;
        $customers[] = ['label' => $customer->fname, 'value' => $customer->id];

        $stores = $customer->stores->map(function ($item){
            return ['label' => $item->ffullname, 'value' => $item->id];
        });
		$collection = Material::all();
		$option2s = $collection->map(function ($item){
			return ['label' => $item->fname, 'value' => $item->id];
		});
		$materials = [['label'=> '--请选择--', 'value' => '']] + $option2s->toArray();
		return view('customer.stock-out.index',compact('customers','stores','materials'));
	}

	/**
	* Show the form for creating a new resource.
	*
	* @return  \Illuminate\Http\Response
	*/
	public function create()
	{
		return view('customer.stock-out.create');
	}

	/**
	* Display the specified resource.
	*
	* @param    int  $id
	* @return  \Illuminate\Http\Response
	*/
	public function edit($id)
	{
		$entity = StockOut::find($id);
		return view('customer.stock-out.edit', ['entity' => $entity]);
	}

	/**
	* Display the specified resource.
	*
	* @param    int  $id
	* @return  \Illuminate\Http\Response
	*/
	public function show($id)
	{
		//
	}

	public function store(Request $request, $extraFields=[])
    {
        $data = $request->input('data', []);
        $props = current($data);

        $extraFields=[
            'fcust_id' => Auth::user()->reference->id,
            'fuser_id' => Auth::user()->reference->id,
            //'fbill_no' => Store::find($props['fstore_id'])->fnumber.date("Ymd")
        ];
        return parent::store($request, $extraFields);
    }

	/**
	 * @param  Request $request
	 * @param  array $searchCols
	 * @param  array $with
	 * @param  null $conditionCall
	 * @param bool $all_columns
	 * @return \Illuminate\Http\JsonResponse
	 */
	public function pagination(Request $request, $searchCols = [], $with=[], $conditionCall = null, $all_columns = false){
		$searchCols = ["fbill_no","fdocument_status","fsbill_no"];
        $with=['customer','store','user'];
		return parent::pagination($request, $searchCols, $with, $conditionCall, true);
	}

	public function entityQuery()
	{
		$customer = Auth::user()->reference;
		return $customer->stock_outs(); //parent::entityQuery(); // TODO: Change the autogenerated stub
	}

	/*
     * 审核
     */
	public function check(Request $request)
	{
		//return parent::check($request); // TODO: Change the autogenerated stub
		$data = $request->all();
		$ids = explode(",",$data['ids']);
		$entities = $this->newEntity()->newQuery()->whereIn('id',$ids)->get();
		$code = 200;
		$msg =  '审核成功！';
		DB::beginTransaction();
		try {
			foreach ($entities as $entity) {
				$entity->fdocument_status = "C";
				$entity->save();
				$entity->items()->update(['fdocument_status' => 'C']);
			}
			DB::commit();
		} catch (Exception $e) {
			$code = 400;
			$msg = $e->getMessage();
			DB::rollback();
		}

		return response()->json([
			'code' => $code,
			'result' => $msg,
			'data' => $entities
		]);
	}

	/*
	* 反审核
	*/
	public function unCheck(Request $request){
		$data = $request->all();
		$ids = explode(",",$data['ids']);
		$entities = $this->newEntity()->newQuery()->whereIn('id',$ids)->get();
		$code = 200;
		$msg =  '反审核成功！';
		DB::beginTransaction();
		try {
			foreach ($entities as $entity) {
				$entity->fdocument_status = "A";
				$entity->save();
				$entity->items()->update(['fdocument_status' => 'A']);
			}
			DB::commit();
		} catch (Exception $e) {
			$code = 400;
			$msg = $e->getMessage();
			DB::rollback();
		}

		return response()->json([
			'code' => $code,
			'result' => $msg,
			'data' => $entities
		]);
	}

    public function printOutOrder($id){
        $stock_out = StockOut::find($id);
//dd
        return view('customer.stock-out.print_view', compact('stock_out'));
    }

//    public function printOutOrder($id)
//    {
//        $stock_out = StockOut::find($id);
//        $title = $stock_out->customer->name . '送货单';
//        $title_datas = [
//            [
//                'label' => '经销商地址',
//                'value' => $stock_out->customer->faddress
//            ],
//            [
//                'label' => '经销商电话',
//                'value' => $stock_out->customer->ftel
//            ],
//            [
//                'label' => '收货单位',
//                'value' => $stock_out->store->ffullname
//            ],
//            [
//                'label' => '单号',
//                'value' => $stock_out->fbill_no
//            ],
//            [
//                'label' => '门店地址',
//                'value' => $stock_out->store->faddress
//            ],
//            [
//                'label' => '门店电话',
//                'value' => $stock_out->store->fphone
//            ],
//            [
//                'label' => '日期',
//                'value' => date('Y年m月d日',strtotime($stock_out->fdate))
//            ],
//
//
//        ];
//        $tds = [];
//        $idx = 1;
//        foreach ($stock_out->items as $item) {
//            $tds[] = [
//                $idx,
//                $item->material->fname,
//                $item->material->fspecification,
//                $item->material->fbase_unit,
//                (int)$item->fbase_qty,
//                0.00,
//                1.00
//            ];
//            $idx++;
//        }
//        $table_datas = [
//            'ths' => ['行号', '产品名称', '规格型号', '单位', '数量', '单价', '金额'],
//            'tds' => $tds,
//            'statistics_col' => [6]
//        ];
//        return view('customer.layout.print_view', compact('title', 'title_datas', 'table_datas'));
//    }

}
