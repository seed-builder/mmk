<?php

namespace App\Models\Busi;

use Illuminate\Database\Eloquent\Model;

/**
 * model description
 * Class CustomerPrice
 * @package  App\Models
 *
 * @author  xrs
 * @SWG\Model(id="CustomerPrice")
 * @SWG\Property(name="fcreate_date", type="string", description="")
 * @SWG\Property(name="fcust_id", type="integer", description="经销商id")
 * @SWG\Property(name="fdocument_status", type="string", description="审核状态（A-未审核, B-审核中, C-审核通过)")
 * @SWG\Property(name="finvalid_date", type="string", description="作废日期")
 * @SWG\Property(name="finvalid_operator", type="integer", description="作废人")
 * @SWG\Property(name="fis_valid", type="integer", description="是否有效(1-有效， 2-无效)")
 * @SWG\Property(name="fmaterial_id", type="integer", description="物料id")
 * @SWG\Property(name="fmax_qty", type="integer", description="数量止")
 * @SWG\Property(name="fmin_qty", type="integer", description="数量起")
 * @SWG\Property(name="fmodify_date", type="string", description="")
 * @SWG\Property(name="fprice_bottle", type="float", description="单价/瓶")
 * @SWG\Property(name="fprice_box", type="float", description="单价/箱")
 * @SWG\Property(name="fsale_unit", type="string", description="销售单位 ")
 * @SWG\Property(name="fspecification", type="string", description="规格型号")
 * @SWG\Property(name="fstore_id", type="integer", description="门店id")
 * @SWG\Property(name="id", type="integer", description="")
  */
class CustomerPrice extends BaseModel
{
	//
	protected $table = 'bd_customer_prices';
	protected $guarded = ['id'];

	public function material(){
		return $this->belongsTo(Material::class, 'fmaterial_id');
	}

	public function customer(){
		return $this->belongsTo(Customer::class, 'fcust_id');
	}

	public function store(){
		return $this->belongsTo(Material::class, 'fstore_id');
	}

	protected static function boot()
	{
		parent::boot(); // TODO: Change the autogenerated stub

		static::saving(function ($entity){
			if($entity->fmaterial_id){
				$materail = Material::find($entity->fmaterial_id);
				$entity->fspecification = $materail->fspecification;
				$entity->fsale_unit = $materail->fsale_unit;
			}
		});
	}

	public static function getPrice($cust_id, $material_id, $box_qty){
		$prices = static::where('fmaterial_id', $material_id)
//			->where('fmin_qty', '<=', $box_qty)
//			->where('fmax_qty', '>=', $box_qty)
			->where('fdocument_status', 'C')
			->where('fis_valid', 1)
			->where(function ($query) use($cust_id){
				$query->where('fcust_id', $cust_id)->orWhereNull('fcust_id');
			})
			->orderBy('fcust_id', 'desc')
			->orderBy('fmodify_date', 'desc')
			->first();
		return $prices;
	}
}
